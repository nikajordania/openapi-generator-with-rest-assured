openapi: 3.0.3
info:
  description: |
    _Programmatically connect to a computer programming [school](https://hei.school)._
    After [joining us](mailto:contact@hei.school),
    you can get an identification token from
    our [dev](https://dev-hei-admin.auth.eu-west-3.amazoncognito.com/oauth2/authorize?client_id=5s8cg50doahmu855rlc8fr6qmp&response_type=token&scope=email+openid&redirect_uri=https%3A%2F%2Fapi-dev.hei.school%2Fwhoami)
    or [prod](https://prod-hei-admin.auth.eu-west-3.amazoncognito.com/oauth2/authorize?client_id=i8bg538jpfu6mqmqb61m26trd&response_type=token&scope=email+openid&redirect_uri=https%3A%2F%2Fapi-prod.hei.school%2Fwhoami)
    authentication service.
    Then, start playing with our system!

    The implementation of our API is [publicly disclosed](https://github.com/hei-school/hei-admin-api).
    You are welcome to try and compromise it. Happy hacking!
  title: HEI Admin API
  version: latest
servers:
- url: https://api-dev.hei.school
- url: https://api-prod.hei.school
security:
- BearerAuth: []
paths:
  /health/db:
    get:
      operationId: dummyTable_should_not_be_empty
      responses:
        "200":
          content:
            text/plain:
              schema:
                example: OK
                type: string
          description: Return OK if database is ready else KO
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: Bad request
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: Internal server error
      summary: Check database health.
      tags:
      - Health
      x-accepts: application/json
  /whoami:
    get:
      operationId: whoami
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Whoami'
          description: Who you are
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: Bad request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotAuthorizedException'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: Not found
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: Too many requests to the API
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: Internal server error
      summary: Who am I? Tells you who you are.
      tags:
      - Security
      x-accepts: application/json
  /ping:
    get:
      operationId: ping
      responses:
        "200":
          content:
            text/plain:
              schema:
                example: pong
                type: string
          description: pong
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: Bad request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotAuthorizedException'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: Not found
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: Too many requests to the API
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: Internal server error
      summary: pong
      tags:
      - Security
      x-accepts: application/json
  /groups/{id}:
    get:
      operationId: getGroupById
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
          description: The identified group
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: Bad request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotAuthorizedException'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: Not found
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: Too many requests to the API
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: Internal server error
      summary: Get group by identifier
      tags:
      - Teaching
      x-accepts: application/json
  /groups:
    get:
      operationId: getGroups
      parameters:
      - description: Set value to 1 by default if null is provided
        explode: true
        in: query
        name: page
        required: false
        schema:
          $ref: '#/components/schemas/Page'
        style: form
      - description: Set value to 15 by default if null is provided
        explode: true
        in: query
        name: page_size
        required: false
        schema:
          $ref: '#/components/schemas/PageSize'
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Group'
                type: array
          description: List of groups
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: Bad request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotAuthorizedException'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: Not found
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: Too many requests to the API
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: Internal server error
      summary: Get all groups
      tags:
      - Teaching
      x-accepts: application/json
    put:
      description: "Update groups when `id` are provided, create them otherwise."
      operationId: createOrUpdateGroups
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/CreateGroup'
              type: array
        description: Groups to update
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Group'
                type: array
          description: The created or updated groups
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: Bad request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotAuthorizedException'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: Not found
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: Too many requests to the API
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: Internal server error
      summary: Create new groups or update existing groups
      tags:
      - Teaching
      x-content-type: application/json
      x-accepts: application/json
  /students/{id}/work_info:
    get:
      operationId: getStudentWorkInfo
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/WorkStudyStudent'
                type: array
          description: List of Student work info
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: Bad request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotAuthorizedException'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: Not found
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: Too many requests to the API
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: Internal server error
      summary: Get student work info.
      tags:
      - Users
      x-accepts: application/json
    put:
      operationId: createOrUpdateStudentWorkStudyInfo
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/CrupdateWorkStudyStudent'
              type: array
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/WorkStudyStudent'
                type: array
          description: List of Student work info
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: Bad request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotAuthorizedException'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: Not found
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: Too many requests to the API
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: Internal server error
      summary: Create or update work study info of Student.
      tags:
      - Users
      x-content-type: application/json
      x-accepts: application/json
  /students/{id}:
    get:
      operationId: getStudentById
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Student'
          description: The identified student
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: Bad request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotAuthorizedException'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: Not found
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: Too many requests to the API
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: Internal server error
      summary: Get student by identifier
      tags:
      - Users
      x-accepts: application/json
    put:
      operationId: updateStudent
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CrupdateStudent'
        description: Student to update
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Student'
          description: student updated.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: Bad request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotAuthorizedException'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: Not found
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: Too many requests to the API
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: Internal server error
      summary: Update student
      tags:
      - Users
      x-content-type: application/json
      x-accepts: application/json
  /students/{student_id}/grades:
    get:
      operationId: getStudentGrades
      parameters:
      - explode: false
        in: path
        name: student_id
        required: true
        schema:
          type: string
        style: simple
      - description: Set value to 1 by default if null is provided
        explode: true
        in: query
        name: page
        required: false
        schema:
          $ref: '#/components/schemas/Page'
        style: form
      - description: Set value to 15 by default if null is provided
        explode: true
        in: query
        name: page_size
        required: false
        schema:
          $ref: '#/components/schemas/PageSize'
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/AwardedCourseExam'
                type: array
          description: "List of a student's grades, showing the exam and the course\
            \ of these grades."
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: Bad request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotAuthorizedException'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: Not found
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: Too many requests to the API
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: Internal server error
      summary: Get student grades.
      tags:
      - Teaching
      x-accepts: application/json
  /students:
    get:
      operationId: getStudents
      parameters:
      - explode: true
        in: query
        name: page
        required: false
        schema:
          $ref: '#/components/schemas/Page'
        style: form
      - explode: true
        in: query
        name: page_size
        required: false
        schema:
          $ref: '#/components/schemas/PageSize'
        style: form
      - description: "Filter students by ref, case is ignored"
        explode: true
        in: query
        name: ref
        required: false
        schema:
          type: string
        style: form
      - description: "Filter students by first name, case is ignored"
        explode: true
        in: query
        name: first_name
        required: false
        schema:
          type: string
        style: form
      - description: "Filter students by last name, case is ignored"
        explode: true
        in: query
        name: last_name
        required: false
        schema:
          type: string
        style: form
      - description: Filter students by course they are linked to
        explode: true
        in: query
        name: course_id
        required: false
        schema:
          type: string
        style: form
      - description: Filter students by status value return all by default
        explode: true
        in: query
        name: status
        required: false
        schema:
          $ref: '#/components/schemas/EnableStatus'
        style: form
      - description: Filter students by sex value return all by default
        explode: true
        in: query
        name: sex
        required: false
        schema:
          $ref: '#/components/schemas/Sex'
        style: form
      - description: Filter students by work study status
        explode: true
        in: query
        name: work_study_status
        required: false
        schema:
          $ref: '#/components/schemas/WorkStudyStatus'
        style: form
      - description: Filter students by commitment begin date
        explode: true
        in: query
        name: commitment_begin_date
        required: false
        schema:
          format: date-time
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Student'
                type: array
          description: "List of students, ordered by ref."
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: Bad request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotAuthorizedException'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: Not found
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: Too many requests to the API
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: Internal server error
      summary: Get all students
      tags:
      - Users
      x-accepts: application/json
    put:
      description: "Update students when `id` are provided, create them otherwise."
      operationId: createOrUpdateStudents
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/CrupdateStudent'
              type: array
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/createOrUpdateStudents_200_response_inner'
                type: array
          description: The created or updated students
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: Bad request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotAuthorizedException'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: Not found
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: Too many requests to the API
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: Internal server error
      summary: Create new students or update existing students
      tags:
      - Users
      x-content-type: application/json
      x-accepts: application/json
  /courses/{id}:
    get:
      operationId: getCourseById
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Course'
          description: The identified course
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: Bad request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotAuthorizedException'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: Not found
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: Too many requests to the API
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: Internal server error
      summary: Get course by identifier
      tags:
      - Teaching
      x-accepts: application/json
  /courses:
    get:
      operationId: getCourses
      parameters:
      - description: "Filter courses by code, case is ignored"
        explode: true
        in: query
        name: code
        required: false
        schema:
          type: string
        style: form
      - description: "Filter courses by name, case is ignored"
        explode: true
        in: query
        name: name
        required: false
        schema:
          type: string
        style: form
      - description: Filter courses by credits
        explode: true
        in: query
        name: credits
        required: false
        schema:
          type: integer
        style: form
      - description: "Filter courses by teacher firstname, case is ignored"
        explode: true
        in: query
        name: teacher_first_name
        required: false
        schema:
          type: string
        style: form
      - description: "Filter courses by teacher lastname, case is ignored"
        explode: true
        in: query
        name: teacher_last_name
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: credits_order
        required: false
        schema:
          $ref: '#/components/schemas/CourseDirection'
        style: form
      - explode: true
        in: query
        name: code_order
        required: false
        schema:
          $ref: '#/components/schemas/CourseDirection'
        style: form
      - description: Set value to 1 by default if null is provided
        explode: true
        in: query
        name: page
        required: false
        schema:
          $ref: '#/components/schemas/Page'
        style: form
      - description: Set value to 15 by default if null is provided
        explode: true
        in: query
        name: page_size
        required: false
        schema:
          $ref: '#/components/schemas/PageSize'
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Course'
                type: array
          description: List of all courses
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: Bad request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotAuthorizedException'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: Not found
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: Too many requests to the API
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: Internal server error
      summary: Get all courses
      tags:
      - Teaching
      x-accepts: application/json
    put:
      description: "Update courses when `id` are provided, create them otherwise."
      operationId: CreateOrUpdateCourses
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/Course'
              type: array
        description: Courses to update
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Course'
                type: array
          description: Course created or modified
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: Bad request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotAuthorizedException'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: Not found
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: Too many requests to the API
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: Internal server error
      summary: Create new courses or update existing courses
      tags:
      - Teaching
      x-content-type: application/json
      x-accepts: application/json
  /groups/{group_id}/awarded_courses/{awarded_course_id}:
    get:
      operationId: getAwardedCoursesByIdAndGroupId
      parameters:
      - explode: false
        in: path
        name: group_id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: awarded_course_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AwardedCourse'
          description: A spesific awarded_courses from a courses
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: Bad request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotAuthorizedException'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: Not found
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: Too many requests to the API
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: Internal server error
      summary: Get a specific group awarded_course
      tags:
      - Teaching
      x-accepts: application/json
  /groups/{group_id}/awarded_courses/{awarded_course_id}/exams:
    get:
      operationId: getExamsByGroupIdAndAwardedCourse
      parameters:
      - explode: false
        in: path
        name: group_id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: awarded_course_id
        required: true
        schema:
          type: string
        style: simple
      - description: Set value to 1 by default if null is provided
        explode: true
        in: query
        name: page
        required: false
        schema:
          $ref: '#/components/schemas/Page'
        style: form
      - description: Set value to 15 by default if null is provided
        explode: true
        in: query
        name: page_size
        required: false
        schema:
          $ref: '#/components/schemas/PageSize'
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ExamInfo'
                type: array
          description: List of exam infos without the participants of the specified
            course
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: Bad request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotAuthorizedException'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: Not found
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: Too many requests to the API
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: Internal server error
      summary: Get all exam infos of a specified awarded_course.
      tags:
      - Teaching
      x-accepts: application/json
    put:
      description: "Update exams when `id` are provided, create them otherwise."
      operationId: CreateOrUpdateExams
      parameters:
      - explode: false
        in: path
        name: group_id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: awarded_course_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/ExamInfo'
              type: array
        description: Exams to update
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ExamInfo'
                type: array
          description: Exams infos without the students participated
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: Bad request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotAuthorizedException'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: Not found
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: Too many requests to the API
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: Internal server error
      summary: Create new exams or update existing exams
      tags:
      - Teaching
      x-content-type: application/json
      x-accepts: application/json
  /groups/{group_id}/awarded_courses/{awarded_course_id}/exams/{exam_id}:
    get:
      operationId: getExamById
      parameters:
      - explode: false
        in: path
        name: group_id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: awarded_course_id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: exam_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExamInfo'
          description: A specific exam
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: Bad request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotAuthorizedException'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: Not found
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: Too many requests to the API
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: Internal server error
      summary: Get a awarded_course exam.
      tags:
      - Teaching
      x-accepts: application/json
  /groups/{group_id}/awarded_courses/{awarded_course_id}/exams/{exam_id}/grades:
    get:
      operationId: getExamGrades
      parameters:
      - explode: false
        in: path
        name: group_id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: exam_id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: awarded_course_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExamDetail'
          description: Exam infos with the students participated and their grades
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: Bad request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotAuthorizedException'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: Not found
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: Too many requests to the API
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: Internal server error
      summary: Get exam details with the participants and their grades in a specified
        awarded_course.
      tags:
      - Teaching
      x-accepts: application/json
    post:
      operationId: createStudentExamGrade
      parameters:
      - explode: false
        in: path
        name: group_id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: awarded_course_id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: exam_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/CreateGrade'
              type: array
        description: Examination with its participants with their note to create.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ExamDetail'
                type: array
          description: Exam with participants and grade
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: Bad request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotAuthorizedException'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: Not found
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: Too many requests to the API
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: Internal server error
      summary: Create exam grades
      tags:
      - Teaching
      x-content-type: application/json
      x-accepts: application/json
  /groups/{id}/awarded_courses:
    get:
      operationId: getAllAwardedCourseByGroup
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Set value to 1 by default if null is provided
        explode: true
        in: query
        name: page
        required: false
        schema:
          $ref: '#/components/schemas/Page'
        style: form
      - description: Set value to 15 by default if null is provided
        explode: true
        in: query
        name: page_size
        required: false
        schema:
          $ref: '#/components/schemas/PageSize'
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/AwardedCourse'
                type: array
          description: List of all awarded_courses in specific group
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: Bad request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotAuthorizedException'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: Not found
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: Too many requests to the API
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: Internal server error
      summary: Get all group awarded_courses
      tags:
      - Teaching
      x-accepts: application/json
    put:
      description: "Update awarded_courses when `id` are provided, create them otherwise."
      operationId: CreateOrUpdateAwardedCourses
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/CreateAwardedCourse'
              type: array
        description: Awarded_courses to update
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/AwardedCourse'
                type: array
          description: Exams infos without the students participated
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: Bad request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotAuthorizedException'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: Not found
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: Too many requests to the API
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: Internal server error
      summary: Create new awarded_courses or update existing awarded_courses
      tags:
      - Teaching
      x-content-type: application/json
      x-accepts: application/json
  /groups/{id}/students:
    get:
      operationId: getStudentsByGroupId
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Set value to 1 by default if null is provided
        explode: true
        in: query
        name: page
        required: false
        schema:
          $ref: '#/components/schemas/Page'
        style: form
      - description: Set value to 15 by default if null is provided
        explode: true
        in: query
        name: page_size
        required: false
        schema:
          $ref: '#/components/schemas/PageSize'
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Student'
                type: array
          description: List of all student in specific awarded_course and group
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: Bad request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotAuthorizedException'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: Not found
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: Too many requests to the API
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: Internal server error
      summary: Get all students who follow a group
      tags:
      - Teaching
      x-accepts: application/json
  /students/{id}/group_flows:
    post:
      operationId: moveOrDeleteStudentInGroup
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/CreateGroupFlow'
              type: array
        description: Movement of a student towards a group to create.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/GroupFlow'
                type: array
          description: Detail of student flow in a group
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: Bad request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotAuthorizedException'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: Not found
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: Too many requests to the API
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: Internal server error
      summary: Moving or removing a student from a group.
      tags:
      - Teaching
      x-content-type: application/json
      x-accepts: application/json
  /awarded_courses:
    get:
      operationId: getAllAwardedCourseByCriteria
      parameters:
      - explode: true
        in: query
        name: teacher_id
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: course_id
        required: false
        schema:
          type: string
        style: form
      - description: Set value to 1 by default if null is provided
        explode: true
        in: query
        name: page
        required: false
        schema:
          $ref: '#/components/schemas/Page'
        style: form
      - description: Set value to 15 by default if null is provided
        explode: true
        in: query
        name: page_size
        required: false
        schema:
          $ref: '#/components/schemas/PageSize'
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/AwardedCourse'
                type: array
          description: List of all awarded_courses
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: Bad request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotAuthorizedException'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: Not found
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: Too many requests to the API
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: Internal server error
      summary: Get all awarded_courses
      tags:
      - Teaching
      x-accepts: application/json
  /groups/{group_id}/awarded_courses/{awarded_course_id}/exams/{exam_id}/students/{student_id}/grade:
    get:
      operationId: getParticipantGrade
      parameters:
      - explode: false
        in: path
        name: group_id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: exam_id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: student_id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: awarded_course_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StudentGrade'
          description: The specified participant with his grade
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: Bad request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotAuthorizedException'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: Not found
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: Too many requests to the API
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: Internal server error
      summary: Return a participant with his exam grades
      tags:
      - Teaching
      x-accepts: application/json
  /teachers/{id}:
    get:
      operationId: getTeacherById
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Teacher'
          description: The identified teacher
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: Bad request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotAuthorizedException'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: Not found
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: Too many requests to the API
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: Internal server error
      summary: Get teacher by identifier
      tags:
      - Users
      x-accepts: application/json
    put:
      operationId: updateTeacher
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CrupdateTeacher'
        description: Teacher to update
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Teacher'
          description: updated teacher.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: Bad request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotAuthorizedException'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: Not found
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: Too many requests to the API
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: Internal server error
      summary: Update teacher
      tags:
      - Users
      x-content-type: application/json
      x-accepts: application/json
  /teachers:
    get:
      operationId: getTeachers
      parameters:
      - explode: true
        in: query
        name: page
        required: false
        schema:
          $ref: '#/components/schemas/Page'
        style: form
      - explode: true
        in: query
        name: page_size
        required: false
        schema:
          $ref: '#/components/schemas/PageSize'
        style: form
      - description: "Filter teachers by ref, case is ignored"
        explode: true
        in: query
        name: ref
        required: false
        schema:
          type: string
        style: form
      - description: "Filter teachers by first name, case is ignored"
        explode: true
        in: query
        name: first_name
        required: false
        schema:
          type: string
        style: form
      - description: "Filter teachers by last name, case is ignored"
        explode: true
        in: query
        name: last_name
        required: false
        schema:
          type: string
        style: form
      - description: Filter teachers by status value return all by default
        explode: true
        in: query
        name: status
        required: false
        schema:
          $ref: '#/components/schemas/EnableStatus'
        style: form
      - description: Filter teachers by sex value return all by default
        explode: true
        in: query
        name: sex
        required: false
        schema:
          $ref: '#/components/schemas/Sex'
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Teacher'
                type: array
          description: "List of teachers, ordered by ref."
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: Bad request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotAuthorizedException'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: Not found
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: Too many requests to the API
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: Internal server error
      summary: Get all teachers
      tags:
      - Users
      x-accepts: application/json
    put:
      description: "Update teachers when `id` are provided, create them otherwise."
      operationId: createOrUpdateTeachers
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/CrupdateTeacher'
              type: array
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Teacher'
                type: array
          description: The created or updated teachers
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: Bad request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotAuthorizedException'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: Not found
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: Too many requests to the API
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: Internal server error
      summary: Create new teachers or update existing teachers
      tags:
      - Users
      x-content-type: application/json
      x-accepts: application/json
  /managers/{id}:
    get:
      operationId: getManagerById
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Manager'
          description: The identified manager
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: Bad request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotAuthorizedException'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: Not found
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: Too many requests to the API
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: Internal server error
      summary: Get manager by identifier
      tags:
      - Users
      x-accepts: application/json
    put:
      operationId: updateManager
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CrupdateManager'
        description: manager to update
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Manager'
          description: updated manager.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: Bad request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotAuthorizedException'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: Not found
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: Too many requests to the API
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: Internal server error
      summary: Update manager
      tags:
      - Users
      x-content-type: application/json
      x-accepts: application/json
  /managers:
    get:
      operationId: getManagers
      parameters:
      - explode: true
        in: query
        name: page
        required: false
        schema:
          $ref: '#/components/schemas/Page'
        style: form
      - explode: true
        in: query
        name: page_size
        required: false
        schema:
          $ref: '#/components/schemas/PageSize'
        style: form
      - description: Filter managers by status value return all by default
        explode: true
        in: query
        name: status
        required: false
        schema:
          $ref: '#/components/schemas/EnableStatus'
        style: form
      - description: Filter managers by sex value return all by default
        explode: true
        in: query
        name: sex
        required: false
        schema:
          $ref: '#/components/schemas/Sex'
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Manager'
                type: array
          description: "List of managers, ordered by ref."
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: Bad request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotAuthorizedException'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: Not found
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: Too many requests to the API
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: Internal server error
      summary: Get all managers
      tags:
      - Users
      x-accepts: application/json
  /delay_penalty_change:
    post:
      operationId: createDelayPenaltyChange
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateDelayPenaltyChange'
        description: Delay penalties to create
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DelayPenalty'
          description: List of created delay penalties
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: Bad request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotAuthorizedException'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: Not found
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: Too many requests to the API
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: Internal server error
      summary: Change current delay penalty configuration
      tags:
      - Paying
      x-content-type: application/json
      x-accepts: application/json
  /delay_penalty:
    get:
      operationId: getDelayPenalty
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DelayPenalty'
          description: Active delay penalty
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: Bad request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotAuthorizedException'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: Not found
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: Too many requests to the API
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: Internal server error
      summary: Get current delay penalty
      tags:
      - Paying
      x-accepts: application/json
  /students/{student_id}/fees/{fee_id}:
    delete:
      description: Soft delete
      operationId: deleteStudentFeeById
      parameters:
      - explode: false
        in: path
        name: fee_id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: student_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Fee'
          description: student fee deleted by identifier.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: Bad request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotAuthorizedException'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: Not found
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: Too many requests to the API
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: Internal server error
      summary: Delete student fee by identifier.
      tags:
      - Paying
      x-accepts: application/json
    get:
      operationId: getStudentFeeById
      parameters:
      - explode: false
        in: path
        name: student_id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: fee_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Fee'
          description: Identified student fee
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: Bad request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotAuthorizedException'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: Not found
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: Too many requests to the API
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: Internal server error
      summary: Get student fee by identifier
      tags:
      - Paying
      x-accepts: application/json
  /students/{student_id}/fees:
    get:
      description: Fees can be filtered with an optional payment status parameter.
      operationId: getStudentFees
      parameters:
      - explode: false
        in: path
        name: student_id
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: page
        required: false
        schema:
          $ref: '#/components/schemas/Page'
        style: form
      - explode: true
        in: query
        name: page_size
        required: false
        schema:
          $ref: '#/components/schemas/PageSize'
        style: form
      - explode: true
        in: query
        name: status
        required: false
        schema:
          enum:
          - UNPAID
          - PAID
          - LATE
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Fee'
                type: array
          description: List of all student fees
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: Bad request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotAuthorizedException'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: Not found
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: Too many requests to the API
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: Internal server error
      summary: Get all student fees ordered by due datetime desc
      tags:
      - Paying
      x-accepts: application/json
    post:
      operationId: createStudentFees
      parameters:
      - explode: false
        in: path
        name: student_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/CreateFee'
              type: array
        description: Student fees to create
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Fee'
                type: array
          description: Created student fees
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: Bad request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotAuthorizedException'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: Not found
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: Too many requests to the API
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: Internal server error
      summary: Create student fees
      tags:
      - Paying
      x-content-type: application/json
      x-accepts: application/json
    put:
      operationId: updateStudentFees
      parameters:
      - explode: false
        in: path
        name: student_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/Fee'
              type: array
        description: Student fees to update
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Fee'
                type: array
          description: Update student fees
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: Bad request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotAuthorizedException'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: Not found
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: Too many requests to the API
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: Internal server error
      summary: "Update student fees, can only modify due_datetime and comment, must\
        \ contain an ID"
      tags:
      - Paying
      x-content-type: application/json
      x-accepts: application/json
  /fees:
    get:
      operationId: getFees
      parameters:
      - description: See the PaymentStatus object for its value.
        explode: true
        in: query
        name: status
        required: false
        schema:
          default: LATE
          enum:
          - UNPAID
          - LATE
          - PAID
          type: string
        style: form
      - explode: true
        in: query
        name: page
        required: false
        schema:
          $ref: '#/components/schemas/Page'
        style: form
      - explode: true
        in: query
        name: page_size
        required: false
        schema:
          $ref: '#/components/schemas/PageSize'
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Fee'
                type: array
          description: List of filtered student fees
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: Bad request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotAuthorizedException'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: Not found
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: Too many requests to the API
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: Internal server error
      summary: Get all student fees filtered by status
      tags:
      - Paying
      x-accepts: application/json
  /fees/templates:
    get:
      operationId: getFeeTemplates
      parameters:
      - explode: true
        in: query
        name: name
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: amount
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: number_of_payments
        required: false
        schema:
          type: integer
        style: form
      - explode: true
        in: query
        name: page
        required: false
        schema:
          $ref: '#/components/schemas/Page'
        style: form
      - explode: true
        in: query
        name: page_size
        required: false
        schema:
          $ref: '#/components/schemas/PageSize'
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/FeeTemplate'
                type: array
          description: List of templates of fee
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: Bad request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotAuthorizedException'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: Not found
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: Too many requests to the API
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: Internal server error
      summary: Get all fee templates
      tags:
      - Paying
      x-accepts: application/json
  /fees/templates/{id}:
    get:
      description: Get fee template by `id` if `id` exists
      operationId: getFeeTemplateById
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeeTemplate'
          description: The fee template requested
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: Bad request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotAuthorizedException'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: Not found
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: Too many requests to the API
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: Internal server error
      summary: Get fee template by id
      tags:
      - Paying
      x-accepts: application/json
    put:
      description: "Update fee type if `id` exist, create it otherwise."
      operationId: crupdateFeeTemplate
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CrupdateFeeTemplate'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeeTemplate'
          description: The created or updated fee type
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: Bad request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotAuthorizedException'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: Not found
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: Too many requests to the API
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: Internal server error
      summary: Create a new fee type or update existing fee type
      tags:
      - Paying
      x-content-type: application/json
      x-accepts: application/json
  /students/{student_id}/fees/{fee_id}/mpbs:
    get:
      operationId: getMpbs
      parameters:
      - explode: false
        in: path
        name: student_id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: fee_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Mpbs'
          description: The MPBS
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: Bad request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotAuthorizedException'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: Not found
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: Too many requests to the API
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: Internal server error
      summary: "Get, if exists, the Mobile Payment By Student - (MPBS) associated\
        \ to the fee."
      tags:
      - Paying
      x-accepts: application/json
    put:
      description: |
        The payload has no `amount` field
        since a MPBS implicitly pays the remaining unpaid amount of the fee.

        In case the amount paid by the student differs,
        then the (scheduled) verifications will fail and manual fix from a manager is required.

        When the verification succeeds, and only then,
        a `Fee.Payment` object is automatically created to reflect the `Fee.Mbps`.
      operationId: createMpbs
      parameters:
      - explode: false
        in: path
        name: student_id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: fee_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateMpbs'
        description: The MPBS to create
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Mpbs'
          description: The created MPBS
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: Bad request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotAuthorizedException'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: Not found
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: Too many requests to the API
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: Internal server error
      summary: |
        Create a MPBS.
        Only the student that owns the fee can do it.
        No manager nor teacher can.
      tags:
      - Paying
      x-content-type: application/json
      x-accepts: application/json
  /students/{student_id}/fees/{fee_id}/mpbs/verifications:
    get:
      operationId: getMpbsVerifications
      parameters:
      - explode: false
        in: path
        name: student_id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: fee_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/MpbsVerification'
                type: array
          description: The list of MbpsVerification
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: Bad request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotAuthorizedException'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: Not found
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: Too many requests to the API
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: Internal server error
      summary: |
        Get list of MpbsVerification associated to the Mpbs.
        Verifications are scheduled 4 times a day.
      tags:
      - Paying
      x-accepts: application/json
  /students/{student_id}/fees/{fee_id}/payments:
    get:
      operationId: getStudentPayments
      parameters:
      - explode: false
        in: path
        name: student_id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: fee_id
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: page
        required: false
        schema:
          $ref: '#/components/schemas/Page'
        style: form
      - explode: true
        in: query
        name: page_size
        required: false
        schema:
          $ref: '#/components/schemas/PageSize'
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Payment'
                type: array
          description: List of all student payments
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: Bad request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotAuthorizedException'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: Not found
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: Too many requests to the API
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: Internal server error
      summary: Get all student payments of a specific fee. Resulting list is ordered
        by creation datetime desc.
      tags:
      - Paying
      x-accepts: application/json
    post:
      operationId: createStudentPayments
      parameters:
      - explode: false
        in: path
        name: student_id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: fee_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/CreatePayment'
              type: array
        description: Student payments to create
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Payment'
                type: array
          description: Created student payments
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: Bad request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotAuthorizedException'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: Not found
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: Too many requests to the API
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: Internal server error
      summary: Create student payments
      tags:
      - Paying
      x-content-type: application/json
      x-accepts: application/json
  /students/{student_id}/fees/{fee_id}/payments/{payment_id}:
    delete:
      description: Soft delete
      operationId: deleteStudentFeePaymentById
      parameters:
      - explode: false
        in: path
        name: student_id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: fee_id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: payment_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payment'
          description: deleted payment
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: Bad request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotAuthorizedException'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: Not found
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: Too many requests to the API
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: Internal server error
      summary: Delete student payment on a fee.
      tags:
      - Paying
      x-accepts: application/json
  /attendance/movement:
    post:
      operationId: createAttendanceMovement
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/CreateAttendanceMovement'
              type: array
        description: Attendance movement to create
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/StudentAttendanceMovement'
                type: array
          description: Created student attendance movement
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: Bad request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotAuthorizedException'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: Not found
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: Too many requests to the API
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: Internal server error
      summary: Create attendance movement of one student
      tags:
      - Attendance
      x-content-type: application/json
      x-accepts: application/json
  /teachers/{teacher_id}/picture/raw:
    post:
      operationId: uploadTeacherProfilePicture
      parameters:
      - explode: false
        in: path
        name: teacher_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UploadFile'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Teacher'
          description: Teacher updated
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: Bad request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotAuthorizedException'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: Not found
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: Too many requests to the API
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: Internal server error
      summary: Upload teacher profile picture
      tags:
      - Users
      x-content-type: multipart/form-data
      x-accepts: application/json
  /managers/{manager_id}/picture/raw:
    post:
      operationId: uploadManagerProfilePicture
      parameters:
      - explode: false
        in: path
        name: manager_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UploadFile'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Manager'
          description: Manager updated
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: Bad request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotAuthorizedException'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: Not found
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: Too many requests to the API
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: Internal server error
      summary: Upload manager profile picture
      tags:
      - Users
      x-content-type: multipart/form-data
      x-accepts: application/json
  /students/{student_id}/picture/raw:
    post:
      operationId: uploadStudentProfilePicture
      parameters:
      - explode: false
        in: path
        name: student_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UploadFile'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Student'
          description: Student updated
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: Bad request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotAuthorizedException'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: Not found
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: Too many requests to the API
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: Internal server error
      summary: Upload student profile picture
      tags:
      - Users
      x-content-type: multipart/form-data
      x-accepts: application/json
  /attendance:
    get:
      operationId: getStudentsAttendance
      parameters:
      - explode: true
        in: query
        name: page
        required: false
        schema:
          $ref: '#/components/schemas/Page'
        style: form
      - explode: true
        in: query
        name: page_size
        required: false
        schema:
          $ref: '#/components/schemas/PageSize'
        style: form
      - description: Filter attendance by courses ids
        explode: true
        in: query
        name: courses_ids
        required: false
        schema:
          items:
            example: course1_id
          type: array
        style: form
      - description: Filter attendance by teachers ids
        explode: true
        in: query
        name: teachers_ids
        required: false
        schema:
          items:
            example: teacher1_id
          type: array
        style: form
      - description: "Filter attendance by student `ref, lastname, firstname`"
        explode: true
        in: query
        name: student_key_word
        required: false
        schema:
          type: string
        style: form
      - description: "Filter attendance from a date, return attendances of the current\
          \ week by default"
        explode: true
        in: query
        name: from
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: "Filter attendance before a date, return attendances of the current\
          \ week by default"
        explode: true
        in: query
        name: to
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: Filter attendance by attendance status value
        explode: true
        in: query
        name: attendance_statuses
        required: false
        schema:
          items:
            $ref: '#/components/schemas/AttendanceStatus'
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/StudentAttendance'
                type: array
          description: List of attendance by courses ids or student key word
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: Bad request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotAuthorizedException'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: Not found
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: Too many requests to the API
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: Internal server error
      summary: Get all attendances by courses ids or student key word
      tags:
      - Attendance
      x-accepts: application/json
  /school/files:
    get:
      operationId: getSchoolRegulations
      parameters:
      - description: Set value to 1 by default if null is provided
        explode: true
        in: query
        name: page
        required: true
        schema:
          $ref: '#/components/schemas/Page'
        style: form
      - description: Set value to 15 by default if null is provided
        explode: true
        in: query
        name: page_size
        required: true
        schema:
          $ref: '#/components/schemas/PageSize'
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/FileInfo'
                type: array
          description: List of school documents
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: Bad request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotAuthorizedException'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: Not found
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: Too many requests to the API
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: Internal server error
      summary: Get school documents
      tags:
      - Files
      x-accepts: application/json
  /school/files/{id}:
    get:
      operationId: getSchoolRegulationById
      parameters:
      - description: file id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileInfo'
          description: File by id
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: Bad request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotAuthorizedException'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: Not found
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: Too many requests to the API
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: Internal server error
      summary: Get school documents by identifier.
      tags:
      - Files
      x-accepts: application/json
  /school/files/raw:
    post:
      operationId: uploadSchoolFile
      parameters:
      - explode: true
        in: query
        name: file_type
        required: true
        schema:
          $ref: '#/components/schemas/FileType'
        style: form
      - explode: true
        in: query
        name: filename
        required: true
        schema:
          type: string
        style: form
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UploadFile'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileInfo'
          description: Document uploaded
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: Bad request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotAuthorizedException'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: Not found
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: Too many requests to the API
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: Internal server error
      summary: Upload school documents
      tags:
      - Files
      x-content-type: multipart/form-data
      x-accepts: application/json
  /students/{student_id}/files/{id}:
    get:
      operationId: getStudentFilesById
      parameters:
      - explode: false
        in: path
        name: student_id
        required: true
        schema:
          type: string
        style: simple
      - description: file id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileInfo'
          description: File by id
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: Bad request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotAuthorizedException'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: Not found
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: Too many requests to the API
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: Internal server error
      summary: Get student files
      tags:
      - Files
      x-accepts: application/json
  /students/{student_id}/work_files:
    get:
      operationId: getStudentWorkDocuments
      parameters:
      - explode: false
        in: path
        name: student_id
        required: true
        schema:
          type: string
        style: simple
      - description: Set value to 1 by default if null is provided
        explode: true
        in: query
        name: page
        required: true
        schema:
          $ref: '#/components/schemas/Page'
        style: form
      - description: Set value to 15 by default if null is provided
        explode: true
        in: query
        name: page_size
        required: true
        schema:
          $ref: '#/components/schemas/PageSize'
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/FileInfo'
                type: array
          description: List of student work documents
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: Bad request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotAuthorizedException'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: Not found
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: Too many requests to the API
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: Internal server error
      summary: Get student work documents
      tags:
      - Files
      x-accepts: application/json
  /students/{student_id}/work_files/{id}:
    get:
      operationId: getStudentWorkDocumentsById
      parameters:
      - explode: false
        in: path
        name: student_id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileInfo'
          description: Student work documents
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: Bad request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotAuthorizedException'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: Not found
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: Too many requests to the API
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: Internal server error
      summary: Get student work documents
      tags:
      - Files
      x-accepts: application/json
  /students/{student_id}/work_files/raw:
    post:
      operationId: uploadStudentWorkFile
      parameters:
      - explode: false
        in: path
        name: student_id
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: filename
        required: true
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: work_study_status
        required: true
        schema:
          $ref: '#/components/schemas/WorkStudyStatus'
        style: form
      - explode: true
        in: query
        name: commitment_begin
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - explode: true
        in: query
        name: commitment_end
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - explode: true
        in: query
        name: creation_datetime
        required: false
        schema:
          format: date-time
          type: string
        style: form
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UploadFile'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileInfo'
          description: File uploaded
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: Bad request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotAuthorizedException'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: Not found
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: Too many requests to the API
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: Internal server error
      summary: Upload student work file
      tags:
      - Files
      x-content-type: multipart/form-data
      x-accepts: application/json
  /students/{student_id}/files/raw:
    post:
      operationId: uploadStudentFile
      parameters:
      - explode: false
        in: path
        name: student_id
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: file_type
        required: true
        schema:
          $ref: '#/components/schemas/FileType'
        style: form
      - explode: true
        in: query
        name: filename
        required: true
        schema:
          type: string
        style: form
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UploadFile'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileInfo'
          description: File uploaded
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: Bad request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotAuthorizedException'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: Not found
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: Too many requests to the API
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: Internal server error
      summary: Upload student file
      tags:
      - Files
      x-content-type: multipart/form-data
      x-accepts: application/json
  /students/{student_id}/files:
    get:
      operationId: getStudentFiles
      parameters:
      - explode: false
        in: path
        name: student_id
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: file_type
        required: false
        schema:
          $ref: '#/components/schemas/FileType'
        style: form
      - description: Set value to 1 by default if null is provided
        explode: true
        in: query
        name: page
        required: true
        schema:
          $ref: '#/components/schemas/Page'
        style: form
      - description: Set value to 15 by default if null is provided
        explode: true
        in: query
        name: page_size
        required: true
        schema:
          $ref: '#/components/schemas/PageSize'
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/FileInfo'
                type: array
          description: List of student files
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: Bad request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotAuthorizedException'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: Not found
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: Too many requests to the API
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: Internal server error
      summary: Get student files
      tags:
      - Files
      x-accepts: application/json
  /students/{id}/scholarship_certificate/raw:
    get:
      operationId: getStudentScholarshipCertificate
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/pdf:
              schema:
                example: !!binary |-
                  UERGIFZFUlNJT04=
                format: byte
                type: string
          description: Scholarship certificate of student
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: Bad request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotAuthorizedException'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: Not found
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: Too many requests to the API
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: Internal server error
      summary: Get scholarship certificate of a student.
      tags:
      - Files
      x-accepts: application/json
  /events:
    get:
      operationId: getEvents
      parameters:
      - description: Set value to 1 by default if null is provided
        explode: true
        in: query
        name: page
        required: false
        schema:
          $ref: '#/components/schemas/Page'
        style: form
      - description: Set value to 15 by default if null is provided
        explode: true
        in: query
        name: page_size
        required: false
        schema:
          $ref: '#/components/schemas/PageSize'
        style: form
      - description: "Filter events from a given date, return events of current week\
          \ by default"
        explode: true
        in: query
        name: from
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: "Filter events after a given date, return events of current week\
          \ by default"
        explode: true
        in: query
        name: to
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: Filter events by event type
        explode: true
        in: query
        name: event_type
        required: false
        schema:
          $ref: '#/components/schemas/EventType'
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Event'
                type: array
          description: List of events
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: Bad request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotAuthorizedException'
          description: Forbidden
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: Too many requests to the API
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: Internal server error
      summary: Get all events.
      tags:
      - Events
      x-accepts: application/json
    put:
      description: "Update if id is provided, create otherwise."
      operationId: crupdateEvents
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/CreateEvent'
              type: array
        description: Event to create or update
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Event'
                type: array
          description: Event created
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: Bad request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotAuthorizedException'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: Not found
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: Too many requests to the API
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: Internal server error
      summary: Create or update events
      tags:
      - Events
      x-content-type: application/json
      x-accepts: application/json
  /events/{id}:
    get:
      operationId: getEventById
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Event'
          description: Event by identifier
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: Bad request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotAuthorizedException'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: Not found
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: Too many requests to the API
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: Internal server error
      summary: Get event by identifier
      tags:
      - Events
      x-accepts: application/json
  /events/{id}/participants:
    get:
      operationId: getEventParticipants
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Set value to 1 by default if null is provided
        explode: true
        in: query
        name: page
        required: false
        schema:
          $ref: '#/components/schemas/Page'
        style: form
      - description: Set value to 15 by default if null is provided
        explode: true
        in: query
        name: page_size
        required: false
        schema:
          $ref: '#/components/schemas/PageSize'
        style: form
      - description: Filter by group ref
        explode: true
        in: query
        name: group_ref
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/EventParticipant'
                type: array
          description: Participants of the event
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: Bad request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotAuthorizedException'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: Not found
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: Too many requests to the API
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: Internal server error
      summary: Users taking parts to event
      tags:
      - Events
      x-accepts: application/json
    put:
      operationId: updateEventParticipantsStatus
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/UpdateEventParticipant'
              type: array
        description: Participants attend for given event
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/EventParticipant'
                type: array
          description: Participants attended for given event
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: Bad request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotAuthorizedException'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: Not found
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: Too many requests to the API
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: Internal server error
      summary: Update event participants status
      tags:
      - Events
      x-content-type: application/json
      x-accepts: application/json
  /comments:
    get:
      operationId: getComments
      parameters:
      - description: Set value to 1 by default if null is provided
        explode: true
        in: query
        name: page
        required: false
        schema:
          $ref: '#/components/schemas/Page'
        style: form
      - description: Set value to 15 by default if null is provided
        explode: true
        in: query
        name: page_size
        required: false
        schema:
          $ref: '#/components/schemas/PageSize'
        style: form
      - explode: true
        in: query
        name: timestamp_direction
        required: false
        schema:
          $ref: '#/components/schemas/OrderDirection'
        style: form
      - explode: true
        in: query
        name: student_ref
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Comment'
                type: array
          description: Comments filtered with criteria if provided
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: Bad request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotAuthorizedException'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: Not found
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: Too many requests to the API
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: Internal server error
      summary: Get all comments.
      tags:
      - Comments
      x-accepts: application/json
  /students/{student_id}/comments:
    get:
      operationId: getStudentComments
      parameters:
      - explode: false
        in: path
        name: student_id
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: observer_id
        required: false
        schema:
          type: string
        style: form
      - description: Set value to 1 by default if null is provided
        explode: true
        in: query
        name: page
        required: false
        schema:
          $ref: '#/components/schemas/Page'
        style: form
      - description: Set value to 15 by default if null is provided
        explode: true
        in: query
        name: page_size
        required: false
        schema:
          $ref: '#/components/schemas/PageSize'
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Comment'
                type: array
          description: Comments filtered with criteria if provided
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: Bad request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotAuthorizedException'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: Not found
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: Too many requests to the API
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: Internal server error
      summary: Get all student comments with filter criteria if provided
      tags:
      - Comments
      x-accepts: application/json
    post:
      operationId: postComment
      parameters:
      - explode: false
        in: path
        name: student_id
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: observer_id
        required: true
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateComment'
        description: The content of the comment
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Comment'
          description: The
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: Bad request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotAuthorizedException'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: Not found
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: Too many requests to the API
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: Internal server error
      summary: Teacher or manager comments about a student
      tags:
      - Comments
      x-content-type: application/json
      x-accepts: application/json
  /announcements:
    get:
      operationId: getAnnouncements
      parameters:
      - description: Set value to 1 by default if null is provided
        explode: true
        in: query
        name: page
        required: false
        schema:
          $ref: '#/components/schemas/Page'
        style: form
      - description: Set value to 15 by default if null is provided
        explode: true
        in: query
        name: page_size
        required: false
        schema:
          $ref: '#/components/schemas/PageSize'
        style: form
      - description: Filter announcements from a given date
        explode: true
        in: query
        name: from
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: Filter events before a given date
        explode: true
        in: query
        name: to
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: Filter announcements by author ref
        explode: true
        in: query
        name: author_ref
        required: false
        schema:
          type: string
        style: form
      - description: Filter by scope
        explode: true
        in: query
        name: scope
        required: false
        schema:
          $ref: '#/components/schemas/Scope'
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Announcement'
                type: array
          description: Announcements filtered with criteria if provided
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: Bad request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotAuthorizedException'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: Not found
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: Too many requests to the API
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: Internal server error
      summary: All announcements
      tags:
      - Announcements
      x-accepts: application/json
    post:
      operationId: createAnnouncement
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAnnouncement'
        description: Infos about the announcement to create
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Announcement'
          description: The announcement created
      summary: Create an announcement
      tags:
      - Announcements
      x-content-type: application/json
      x-accepts: application/json
  /announcements/{id}:
    get:
      operationId: getAnnouncementById
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Announcement'
          description: Announcement by identifier
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: Bad request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotAuthorizedException'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: Not found
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: Too many requests to the API
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: Internal server error
      summary: Get announcement by identifier
      tags:
      - Announcements
      x-accepts: application/json
  /students/announcements:
    get:
      operationId: getStudentsAnnouncements
      parameters:
      - description: Set value to 1 by default if null is provided
        explode: true
        in: query
        name: page
        required: false
        schema:
          $ref: '#/components/schemas/Page'
        style: form
      - description: Set value to 15 by default if null is provided
        explode: true
        in: query
        name: page_size
        required: false
        schema:
          $ref: '#/components/schemas/PageSize'
        style: form
      - description: Filter announcements from a given date
        explode: true
        in: query
        name: from
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: Filter events before a given date
        explode: true
        in: query
        name: to
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: Filter announcements by author ref
        explode: true
        in: query
        name: author_ref
        required: false
        schema:
          type: string
        style: form
      - description: Filter announcements by group ref of the target
        explode: true
        in: query
        name: group_ref
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Announcement'
                type: array
          description: Announcements filtered with criteria if provided
      summary: Get all announcements for students
      tags:
      - Announcements
      x-accepts: application/json
  /students/announcements/{id}:
    get:
      operationId: getStudentsAnnouncementById
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Announcement'
          description: Announcement by identifier
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: Bad request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotAuthorizedException'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: Not found
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: Too many requests to the API
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: Internal server error
      summary: Get announcement for student by identifier
      tags:
      - Announcements
      x-accepts: application/json
  /teachers/announcements:
    get:
      operationId: getTeachersAnnouncements
      parameters:
      - description: Set value to 1 by default if null is provided
        explode: true
        in: query
        name: page
        required: false
        schema:
          $ref: '#/components/schemas/Page'
        style: form
      - description: Set value to 15 by default if null is provided
        explode: true
        in: query
        name: page_size
        required: false
        schema:
          $ref: '#/components/schemas/PageSize'
        style: form
      - description: Filter announcements from a given date
        explode: true
        in: query
        name: from
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: Filter events before a given date
        explode: true
        in: query
        name: to
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: Filter announcements by author ref
        explode: true
        in: query
        name: author_ref
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Announcement'
                type: array
          description: Announcements filtered with criteria if provided
      summary: Get all announcements for teachers
      tags:
      - Announcements
      x-accepts: application/json
  /teachers/announcements/{id}:
    get:
      operationId: getTeacherAnnouncementById
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Announcement'
          description: Announcement by identifier
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
          description: Bad request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotAuthorizedException'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: Not found
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
          description: Too many requests to the API
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: Internal server error
      summary: Get teacher announcement by identifier
      tags:
      - Announcements
      x-accepts: application/json
  /promotions:
    get:
      operationId: getPromotions
      parameters:
      - description: Set value to 1 by default if null is provided
        explode: true
        in: query
        name: page
        required: false
        schema:
          $ref: '#/components/schemas/Page'
        style: form
      - description: Set value to 15 by default if null is provided
        explode: true
        in: query
        name: page_size
        required: false
        schema:
          $ref: '#/components/schemas/PageSize'
        style: form
      - description: Filter promotion by name
        explode: true
        in: query
        name: name
        required: false
        schema:
          type: string
        style: form
      - description: Filter promotion by ref
        explode: true
        in: query
        name: ref
        required: false
        schema:
          type: string
        style: form
      - description: Filter promotion by group ref
        explode: true
        in: query
        name: group_ref
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Promotion'
                type: array
          description: Promotions filtered with criteria if provided
      summary: Get all promotions
      tags:
      - Promotions
      x-accepts: application/json
    put:
      operationId: crupdatePromotion
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CrupdatePromotion'
        description: Create or update promotion
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Promotion'
          description: The promotion created
      summary: "Update promotion if `id` provided, create otherwise"
      tags:
      - Promotions
      x-content-type: application/json
      x-accepts: application/json
  /promotions/{id}:
    get:
      operationId: getPromotionById
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Promotion'
          description: The promotion queried
      summary: Get promotion by the given id
      tags:
      - Promotions
      x-accepts: application/json
  /promotions/{id}/groups:
    put:
      operationId: updatePromotionGroups
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdatePromotionSGroup'
        description: List of group ids to add
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Promotion'
          description: The promotion created
      summary: Add or remove promotion's groups
      tags:
      - Promotions
      x-content-type: application/json
      x-accepts: application/json
components:
  responses:
    "400":
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/BadRequestException'
      description: Bad request
    "403":
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/NotAuthorizedException'
      description: Forbidden
    "404":
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ResourceNotFoundException'
      description: Not found
    "429":
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/TooManyRequestsException'
      description: Too many requests to the API
    "500":
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/InternalServerException'
      description: Internal server error
  schemas:
    Whoami:
      example:
        role: STUDENT
        bearer: bearer
        id: id
      properties:
        id:
          type: string
        role:
          enum:
          - STUDENT
          - TEACHER
          - MANAGER
          type: string
        bearer:
          type: string
    UserIdentifier:
      example:
        ref: STD000001
        last_name: last_name
        nic: nic
        id: id
        first_name: first_name
        email: email
      properties:
        id:
          type: string
        ref:
          example: STD000001
          type: string
        first_name:
          type: string
        last_name:
          type: string
        email:
          type: string
        nic:
          type: string
      type: object
    StudentAttendanceMovement:
      example:
        attendance_movement_type: null
        student:
          specialization_field: null
          commitment_begin_date: 2000-01-23T04:56:07.000+00:00
          work_study_status: null
          profile_picture: profile_picture
        created_at: 2000-01-23T04:56:07.000+00:00
        id: id
        place: null
      properties:
        id:
          type: string
        attendance_movement_type:
          $ref: '#/components/schemas/AttendanceMovementType'
        created_at:
          format: date-time
          type: string
        place:
          $ref: '#/components/schemas/PlaceEnum'
        student:
          $ref: '#/components/schemas/Student'
    CrupdateUser:
      allOf:
      - $ref: '#/components/schemas/UserIdentifier'
      - $ref: '#/components/schemas/CrupdateUser_allOf'
    WorkStudyStatus:
      enum:
      - HAVE_BEEN_WORKING
      - WILL_BE_WORKING
      - WORKING
      type: string
    SpecializationField:
      enum:
      - COMMON_CORE
      - EL
      - TN
      type: string
    Sex:
      enum:
      - M
      - F
      type: string
    EnableStatus:
      enum:
      - ENABLED
      - DISABLED
      - SUSPENDED
      type: string
    FileType:
      enum:
      - TRANSCRIPT
      - DOCUMENT
      - WORK_DOCUMENT
      - OTHER
      type: string
    EventType:
      enum:
      - COURSE
      - INTEGRATION
      - SEMINAR
      - SUPPORT_SESSION
      - OTHER
      type: string
    StudentAttendance:
      example:
        is_late: true
        student:
          specialization_field: null
          commitment_begin_date: 2000-01-23T04:56:07.000+00:00
          work_study_status: null
          profile_picture: profile_picture
        course_session:
          awareded_course:
            course: null
            id: id
            main_teacher:
              profile_picture: profile_picture
            group:
              ref: G1
              name: The group number one
              creation_datetime: 2000-01-23T04:56:07.000+00:00
              id: id
          end: 2000-01-23T04:56:07.000+00:00
          id: id
          begin: 2000-01-23T04:56:07.000+00:00
        created_at: 2000-01-23T04:56:07.000+00:00
        late_of: 0
        id: id
        place: null
      properties:
        id:
          type: string
        created_at:
          format: date-time
          type: string
        late_of:
          description: "if the student is late, that defines how late he or she is"
          type: integer
        place:
          $ref: '#/components/schemas/PlaceEnum'
        is_late:
          type: boolean
        course_session:
          $ref: '#/components/schemas/CourseSession'
        student:
          $ref: '#/components/schemas/Student'
      type: object
    CourseSession:
      example:
        awareded_course:
          course: null
          id: id
          main_teacher:
            profile_picture: profile_picture
          group:
            ref: G1
            name: The group number one
            creation_datetime: 2000-01-23T04:56:07.000+00:00
            id: id
        end: 2000-01-23T04:56:07.000+00:00
        id: id
        begin: 2000-01-23T04:56:07.000+00:00
      properties:
        id:
          type: string
        awareded_course:
          $ref: '#/components/schemas/AwardedCourse'
        begin:
          format: date-time
          type: string
        end:
          format: date-time
          type: string
      type: object
    CrupdateStudent:
      allOf:
      - $ref: '#/components/schemas/CrupdateUser'
      example:
        specialization_field: null
      properties:
        specialization_field:
          $ref: '#/components/schemas/SpecializationField'
    CrupdateTeacher:
      allOf:
      - $ref: '#/components/schemas/CrupdateUser'
    CrupdateManager:
      allOf:
      - $ref: '#/components/schemas/CrupdateUser'
    CrupdateWorkStudyStudent:
      example:
        commitment_begin_date: 2000-01-23T04:56:07.000+00:00
        business: business
        student_id: student_id
        commitment_end_date: 2000-01-23T04:56:07.000+00:00
        company: company
        id: id
      properties:
        id:
          type: string
        student_id:
          type: string
        commitment_begin_date:
          format: date-time
          type: string
        commitment_end_date:
          format: date-time
          type: string
        business:
          type: string
        company:
          type: string
    WorkStudyInfo:
      example:
        commitment_begin_date: 2000-01-23T04:56:07.000+00:00
        business: business
        commitment_end_date: 2000-01-23T04:56:07.000+00:00
        company: company
        id: id
      properties:
        id:
          type: string
        commitment_begin_date:
          format: date-time
          type: string
        commitment_end_date:
          format: date-time
          type: string
        business:
          type: string
        company:
          type: string
    WorkStudyStudent:
      allOf:
      - $ref: '#/components/schemas/UserIdentifier'
      example:
        work_study_info:
        - commitment_begin_date: 2000-01-23T04:56:07.000+00:00
          business: business
          commitment_end_date: 2000-01-23T04:56:07.000+00:00
          company: company
          id: id
        - commitment_begin_date: 2000-01-23T04:56:07.000+00:00
          business: business
          commitment_end_date: 2000-01-23T04:56:07.000+00:00
          company: company
          id: id
      properties:
        work_study_info:
          items:
            $ref: '#/components/schemas/WorkStudyInfo'
          type: array
    Student:
      allOf:
      - $ref: '#/components/schemas/CrupdateUser'
      example:
        specialization_field: null
        commitment_begin_date: 2000-01-23T04:56:07.000+00:00
        work_study_status: null
        profile_picture: profile_picture
      properties:
        specialization_field:
          $ref: '#/components/schemas/SpecializationField'
        work_study_status:
          $ref: '#/components/schemas/WorkStudyStatus'
        commitment_begin_date:
          format: date-time
          type: string
        profile_picture:
          type: string
    Teacher:
      allOf:
      - $ref: '#/components/schemas/CrupdateUser'
      example:
        profile_picture: profile_picture
      properties:
        profile_picture:
          type: string
    Manager:
      allOf:
      - $ref: '#/components/schemas/CrupdateUser'
      example:
        profile_picture: profile_picture
      properties:
        profile_picture:
          type: string
    GroupIdentifier:
      example:
        ref: G1
        name: The group number one
        id: id
      properties:
        id:
          type: string
        name:
          example: The group number one
          type: string
        ref:
          example: G1
          type: string
      type: object
    Group:
      example:
        ref: G1
        name: The group number one
        creation_datetime: 2000-01-23T04:56:07.000+00:00
        id: id
      properties:
        id:
          type: string
        name:
          example: The group number one
          type: string
        ref:
          example: G1
          type: string
        creation_datetime:
          format: date-time
          type: string
      type: object
    CreateGroup:
      allOf:
      - $ref: '#/components/schemas/Group'
      example:
        students:
        - students
        - students
      properties:
        students:
          items:
            type: string
          type: array
      type: object
    GroupFlow:
      allOf:
      - $ref: '#/components/schemas/CreateGroupFlow'
      example:
        id: id
        flow_datetime: 2000-01-23T04:56:07.000+00:00
      properties:
        id:
          type: string
        flow_datetime:
          format: date-time
          type: string
      type: object
    CreateGroupFlow:
      example:
        group_id: group_id
        move_type: JOIN
        student_id: student_id
      properties:
        move_type:
          enum:
          - JOIN
          - LEAVE
          type: string
        group_id:
          type: string
        student_id:
          type: string
      type: object
    CourseTemplate:
      properties:
        id:
          type: string
        code:
          example: PROG1
          type: string
        name:
          example: Algorithmics
          type: string
        credits:
          type: integer
        total_hours:
          type: integer
      type: object
    Course:
      allOf:
      - $ref: '#/components/schemas/CourseTemplate'
    CreateAwardedCourse:
      example:
        course_id: course_id
        group_id: group_id
        id: id
        main_teacher_id: main_teacher_id
      properties:
        id:
          type: string
        main_teacher_id:
          type: string
        course_id:
          type: string
        group_id:
          type: string
      type: object
    FileInfo:
      example:
        file_url: file_url
        file_type: null
        name: name
        creation_datetime: 2000-01-23T04:56:07.000+00:00
        id: id
      properties:
        id:
          type: string
        name:
          type: string
        creation_datetime:
          format: date-time
          type: string
        file_type:
          $ref: '#/components/schemas/FileType'
        file_url:
          type: string
      type: object
    AwardedCourse:
      example:
        course: null
        id: id
        main_teacher:
          profile_picture: profile_picture
        group:
          ref: G1
          name: The group number one
          creation_datetime: 2000-01-23T04:56:07.000+00:00
          id: id
      properties:
        id:
          type: string
        main_teacher:
          $ref: '#/components/schemas/Teacher'
        course:
          $ref: '#/components/schemas/Course'
        group:
          $ref: '#/components/schemas/Group'
      type: object
    ExamInfo:
      example:
        awarded_course_id: awarded_course_id
        examination_date: 2000-01-23T04:56:07.000+00:00
        coefficient: 0
        id: id
        title: title
      properties:
        id:
          type: string
        coefficient:
          type: integer
        title:
          type: string
        examination_date:
          format: date-time
          type: string
        awarded_course_id:
          type: string
      type: object
    ExamDetail:
      allOf:
      - $ref: '#/components/schemas/ExamInfo'
      example:
        participants:
        - grade:
            score: 12.5
            created_at: 2000-01-23T04:56:07.000+00:00
            id: id
        - grade:
            score: 12.5
            created_at: 2000-01-23T04:56:07.000+00:00
            id: id
      properties:
        participants:
          items:
            $ref: '#/components/schemas/StudentGrade'
          type: array
    Grade:
      example:
        score: 12.5
        created_at: 2000-01-23T04:56:07.000+00:00
        id: id
      properties:
        id:
          type: string
        score:
          example: 12.5
          format: double
          type: number
        created_at:
          format: date-time
          type: string
      type: object
    CreateGrade:
      example:
        awarded_course_id: awarded_course_id
        score: 12.5
        student_id: student_id
        exam_id: exam_id
      properties:
        score:
          example: 12.5
          format: double
          type: number
        student_id:
          type: string
        exam_id:
          type: string
        awarded_course_id:
          type: string
      type: object
    StudentGrade:
      allOf:
      - $ref: '#/components/schemas/UserIdentifier'
      example:
        grade:
          score: 12.5
          created_at: 2000-01-23T04:56:07.000+00:00
          id: id
      properties:
        grade:
          $ref: '#/components/schemas/Grade'
      type: object
    StudentExamGrade:
      allOf:
      - $ref: '#/components/schemas/ExamInfo'
      example:
        grade:
          score: 12.5
          created_at: 2000-01-23T04:56:07.000+00:00
          id: id
      properties:
        grade:
          $ref: '#/components/schemas/Grade'
    AwardedCourseExam:
      allOf:
      - $ref: '#/components/schemas/AwardedCourse'
      example:
        exams:
        - grade:
            score: 12.5
            created_at: 2000-01-23T04:56:07.000+00:00
            id: id
        - grade:
            score: 12.5
            created_at: 2000-01-23T04:56:07.000+00:00
            id: id
      properties:
        exams:
          items:
            $ref: '#/components/schemas/StudentExamGrade'
          type: array
    CreateAttendanceMovement:
      example:
        attendance_movement_type: null
        student_id: student_id
        created_at: 2000-01-23T04:56:07.000+00:00
        place: null
      properties:
        student_id:
          type: string
        created_at:
          format: date-time
          type: string
        attendance_movement_type:
          $ref: '#/components/schemas/AttendanceMovementType'
        place:
          $ref: '#/components/schemas/PlaceEnum'
      type: object
    PlaceEnum:
      enum:
      - IVANDRY
      - ANDRAHARO
      type: string
    CreateFee:
      example:
        due_datetime: 2000-01-23T04:56:07.000+00:00
        total_amount: 0
        creation_datetime: 2000-01-23T04:56:07.000+00:00
        comment: comment
        type: null
      properties:
        type:
          $ref: '#/components/schemas/FeeTypeEnum'
        comment:
          type: string
        total_amount:
          type: integer
        creation_datetime:
          format: date-time
          type: string
        due_datetime:
          format: date-time
          type: string
      type: object
    ModelFee:
      allOf:
      - $ref: '#/components/schemas/Fee'
      properties:
        payments:
          items:
            $ref: '#/components/schemas/Payment'
          type: array
    Fee:
      allOf:
      - $ref: '#/components/schemas/CreateFee'
      example:
        updated_at: 2000-01-23T04:56:07.000+00:00
        remaining_amount: 0
        mpbs:
          amount: 6
          successfully_verified_on: 2000-01-23T04:56:07.000+00:00
          creation_datetime: 2000-01-23T04:56:07.000+00:00
        student_id: student_id
        id: id
        status: null
      properties:
        id:
          type: string
        student_id:
          type: string
        remaining_amount:
          type: integer
        status:
          $ref: '#/components/schemas/FeeStatusEnum'
        updated_at:
          format: date-time
          type: string
        mpbs:
          $ref: '#/components/schemas/Mpbs'
      type: object
    CreateDelayPenaltyChange:
      example:
        grace_delay: 6
        interest_percent: 0
        applicability_delay_after_grace: 1
        interest_timerate: DAILY
      properties:
        interest_percent:
          type: integer
        interest_timerate:
          enum:
          - DAILY
          type: string
        grace_delay:
          type: integer
        applicability_delay_after_grace:
          type: integer
      type: object
    DelayPenalty:
      allOf:
      - $ref: '#/components/schemas/CreateDelayPenaltyChange'
      example:
        creation_datetime: 2000-01-23T04:56:07.000+00:00
        id: id
      properties:
        id:
          type: string
        creation_datetime:
          format: date-time
          type: string
      type: object
    MobileMoneyType:
      enum:
      - MVOLA
      - ORANGE_MONEY
      - AIRTEL_MONEY
      type: string
    CreatePayment:
      example:
        amount: 0
        creation_datetime: 2000-01-23T04:56:07.000+00:00
        comment: comment
        type: BANK_TRANSFER
      properties:
        type:
          enum:
          - BANK_TRANSFER
          - CASH
          - MOBILE_MONEY
          - SCHOLARSHIP
          - FIX
          type: string
        amount:
          type: integer
        comment:
          type: string
        creation_datetime:
          format: date-time
          type: string
      type: object
    Coordinates:
      properties:
        longitude:
          format: double
          type: number
        latitude:
          format: double
          type: number
      type: object
    CrupdateFeeTemplate:
      example:
        amount: 0
        number_of_payments: 6
        name: name
        id: id
        type: null
      properties:
        id:
          type: string
        name:
          type: string
        type:
          $ref: '#/components/schemas/FeeTypeEnum'
        amount:
          type: integer
        number_of_payments:
          type: integer
      type: object
    FeeTemplate:
      allOf:
      - $ref: '#/components/schemas/CrupdateFeeTemplate'
      example:
        creation_datetime: 2000-01-23T04:56:07.000+00:00
      properties:
        creation_datetime:
          format: date-time
          type: string
      type: object
    Payment:
      allOf:
      - $ref: '#/components/schemas/CreatePayment'
      example:
        fee_id: fee_id
        creation_datetime: 2000-01-23T04:56:07.000+00:00
        id: id
      properties:
        id:
          type: string
        fee_id:
          type: string
        creation_datetime:
          format: date-time
          type: string
      type: object
    CreateMpbs:
      example:
        fee_id: fee_id
        student_id: student_id
        psp_id: psp_id
        psp_type: null
      properties:
        student_id:
          type: string
        fee_id:
          type: string
        psp_id:
          description: "The couple `(fee_id, psp_id)` MUST be unique"
          type: string
        psp_type:
          $ref: '#/components/schemas/MobileMoneyType'
      type: object
    Mpbs:
      allOf:
      - $ref: '#/components/schemas/CreateMpbs'
      example:
        amount: 6
        successfully_verified_on: 2000-01-23T04:56:07.000+00:00
        creation_datetime: 2000-01-23T04:56:07.000+00:00
      properties:
        amount:
          type: integer
        creation_datetime:
          format: date-time
          type: string
        successfully_verified_on:
          format: date-time
          type: string
      type: object
    MpbsVerification:
      allOf:
      - $ref: '#/components/schemas/CreateMpbs'
      example:
        amount_in_psp: 6
        amount_of_fee_remaining_payment: 0
        creation_datetime: 2000-01-23T04:56:07.000+00:00
        comment: comment
        creation_datetime_of_payment_in_psp: 2000-01-23T04:56:07.000+00:00
        creation_datetime_of_mpbs: 2000-01-23T04:56:07.000+00:00
      properties:
        amount_of_fee_remaining_payment:
          type: integer
        amount_in_psp:
          type: integer
        creation_datetime_of_payment_in_psp:
          format: date-time
          type: string
        creation_datetime_of_mpbs:
          format: date-time
          type: string
        creation_datetime:
          format: date-time
          type: string
        comment:
          description: "In particular, PSP error messages go here"
          type: string
      type: object
    CreateEvent:
      example:
        planner_id: planner_id
        course_id: course_id
        event_type: null
        end_datetime: 2000-01-23T04:56:07.000+00:00
        description: description
        groups:
        - ref: G1
          name: The group number one
          id: id
        - ref: G1
          name: The group number one
          id: id
        id: id
        begin_datetime: 2000-01-23T04:56:07.000+00:00
      properties:
        id:
          type: string
        description:
          type: string
        begin_datetime:
          format: date-time
          type: string
        end_datetime:
          format: date-time
          type: string
        event_type:
          $ref: '#/components/schemas/EventType'
        planner_id:
          description: user id
          type: string
        course_id:
          type: string
        groups:
          items:
            $ref: '#/components/schemas/GroupIdentifier'
          type: array
      type: object
    AttendanceStatus:
      enum:
      - MISSING
      - LATE
      - PRESENT
      type: string
    UpdateEventParticipant:
      example:
        group_id: group_id
        id: id
        event_status: null
      properties:
        id:
          type: string
        event_status:
          $ref: '#/components/schemas/AttendanceStatus'
        group_id:
          type: string
      type: object
    EventParticipant:
      allOf:
      - $ref: '#/components/schemas/UserIdentifier'
      example:
        group_name: group_name
        event_status: null
      properties:
        group_name:
          type: string
        event_status:
          $ref: '#/components/schemas/AttendanceStatus'
      type: object
    Event:
      example:
        end_datetime: 2000-01-23T04:56:07.000+00:00
        description: description
        course: null
        id: id
        type: null
        begin_datetime: 2000-01-23T04:56:07.000+00:00
        planner:
          ref: STD000001
          last_name: last_name
          nic: nic
          id: id
          first_name: first_name
          email: email
      properties:
        id:
          type: string
        type:
          $ref: '#/components/schemas/EventType'
        description:
          type: string
        begin_datetime:
          format: date-time
          type: string
        end_datetime:
          format: date-time
          type: string
        planner:
          $ref: '#/components/schemas/UserIdentifier'
        course:
          $ref: '#/components/schemas/Course'
      type: object
    CrupdatePromotion:
      example:
        ref: ref
        name: name
        id: id
      properties:
        id:
          type: string
        name:
          type: string
        ref:
          type: string
      type: object
    UpdatePromotionSGroup:
      example:
        group_ids:
        - group_ids
        - group_ids
        type: ADD
      properties:
        type:
          enum:
          - ADD
          - REMOVE
          type: string
        group_ids:
          items:
            type: string
          type: array
      type: object
    Promotion:
      allOf:
      - $ref: '#/components/schemas/CrupdatePromotion'
      example:
        creation_datetime: 2000-01-23T04:56:07.000+00:00
        groups:
        - ref: G1
          name: The group number one
          id: id
        - ref: G1
          name: The group number one
          id: id
      properties:
        creation_datetime:
          format: date-time
          type: string
        groups:
          items:
            $ref: '#/components/schemas/GroupIdentifier'
          type: array
      type: object
    FeeStatusEnum:
      enum:
      - UNPAID
      - PAID
      - LATE
      type: string
    FeeTypeEnum:
      enum:
      - TUITION
      - HARDWARE
      - STUDENT_INSURANCE
      - REMEDIAL_COSTS
      type: string
    UploadFile:
      properties:
        file_to_upload:
          description: User profile picture
          format: binary
          type: string
      type: object
    OrderDirection:
      enum:
      - ASC
      - DESC
      type: string
    Page:
      description: Start at `1`
      type: integer
    PageSize:
      description: Cannot exceed `500`
      type: integer
    AttendanceMovementType:
      enum:
      - IN
      - OUT
      type: string
    CourseDirection:
      enum:
      - ASC
      - DESC
      type: string
    Comment:
      example:
        observer:
          ref: ref
          role: MANAGER
          last_name: last_name
          profile_picture: profile_picture
          id: id
          first_name: first_name
        subject:
          specialization_field: null
          commitment_begin_date: 2000-01-23T04:56:07.000+00:00
          work_study_status: null
          profile_picture: profile_picture
        creation_datetime: 2000-01-23T04:56:07.000+00:00
        id: id
        content: content
      properties:
        id:
          type: string
        subject:
          $ref: '#/components/schemas/Student'
        observer:
          $ref: '#/components/schemas/Observer'
        content:
          type: string
        creation_datetime:
          format: date-time
          type: string
      type: object
    CreateComment:
      example:
        observer_id: observer_id
        student_id: student_id
        id: id
        content: content
      properties:
        id:
          type: string
        student_id:
          type: string
        observer_id:
          type: string
        content:
          type: string
      type: object
    Observer:
      example:
        ref: ref
        role: MANAGER
        last_name: last_name
        profile_picture: profile_picture
        id: id
        first_name: first_name
      properties:
        id:
          type: string
        ref:
          type: string
        first_name:
          type: string
        last_name:
          type: string
        profile_picture:
          type: string
        role:
          enum:
          - MANAGER
          - TEACHER
          type: string
      type: object
    CreateAnnouncement:
      example:
        scope: null
        target_group_list:
        - target_group_list
        - target_group_list
        id: id
        title: title
        author_id: author_id
        content: content
      properties:
        id:
          type: string
        title:
          type: string
        content:
          type: string
        author_id:
          type: string
        scope:
          $ref: '#/components/schemas/Scope'
        target_group_list:
          items:
            $ref: '#/components/schemas/GroupIdentifier'
          type: array
      type: object
    Scope:
      enum:
      - GLOBAL
      - TEACHER
      - STUDENT
      - MANAGER
      type: string
    Announcement:
      example:
        author:
          last_name: last_name
          profile_picture: profile_picture
          id: id
          first_name: first_name
          email: email
        scope: null
        creation_datetime: 2000-01-23T04:56:07.000+00:00
        id: id
        title: title
        content: content
      properties:
        id:
          type: string
        title:
          type: string
        content:
          type: string
        author:
          $ref: '#/components/schemas/Announcement_author'
        creation_datetime:
          format: date-time
          type: string
        scope:
          $ref: '#/components/schemas/Scope'
      type: object
    Exception:
      properties:
        type:
          type: string
        message:
          type: string
      type: object
    BadRequestException:
      allOf:
      - $ref: '#/components/schemas/Exception'
      example:
        type: BadRequestException
        message: Bad request
    NotAuthorizedException:
      allOf:
      - $ref: '#/components/schemas/Exception'
      example:
        type: NotAuthorizedException
        message: Not authorized
    ResourceNotFoundException:
      allOf:
      - $ref: '#/components/schemas/Exception'
      example:
        type: ResourceNotFoundException
        message: Resource of type <T> identified by <I> not found
    TooManyRequestsException:
      allOf:
      - $ref: '#/components/schemas/Exception'
      example:
        type: TooManyRequestsException
        message: Too many requests
    InternalServerException:
      allOf:
      - $ref: '#/components/schemas/Exception'
      example:
        type: InternalServerException
        message: Unexpected error
    createOrUpdateStudents_200_response_inner:
      allOf:
      - $ref: '#/components/schemas/Student'
    CrupdateUser_allOf:
      properties:
        sex:
          $ref: '#/components/schemas/Sex'
        birth_date:
          format: date
          type: string
        birth_place:
          type: string
        address:
          type: string
        phone:
          type: string
        entrance_datetime:
          format: date-time
          type: string
        coordinates:
          $ref: '#/components/schemas/Coordinates'
        high_school_origin:
          type: string
        status:
          $ref: '#/components/schemas/EnableStatus'
      type: object
      example: null
    Announcement_author:
      example:
        last_name: last_name
        profile_picture: profile_picture
        id: id
        first_name: first_name
        email: email
      properties:
        id:
          type: string
        first_name:
          type: string
        last_name:
          type: string
        email:
          type: string
        profile_picture:
          type: string
      type: object
  securitySchemes:
    BearerAuth:
      scheme: bearer
      type: http

